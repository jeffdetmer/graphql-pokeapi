<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="initial-scale=1, minimum-scale=1, maximum-scale=5, user-scalable=yes, width=device-width" />
    
    <link rel="icon" type="image/png" sizes="16x16" href="https://pokeapi.co/favicon-16x16.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="https://pokeapi.co/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="48x48" href="https://pokeapi.co/favicon-48x48.png" />

    <title>The Unofficial GraphQL for PokeAPI by mazipan</title>
    <meta name="description" content="Do you find a simple alternative for PokeAPI's GraphQL? Try this!" />
    <link rel="stylesheet" href="/output.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.22.0/themes/prism-okaidia.min.css" />

    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-D0213WZCL8"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag('js', new Date());

      gtag('config', 'G-D0213WZCL8');
    </script>
    <!--
    <script data-ad-client="ca-pub-5442972248172818" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    -->
  </head>

  <body>
    <main class="min-h-screen flex-1 w-full mx-auto">
      <div class="relative py-32 px-2 flex flex-col justify-center items-center bg-gradient-to-r from-purple-400 via-pink-500 to-red-500">
        <img alt="PokÃ©API" src="https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png" />
        <h1 class="text-3xl md:text-4xl font-bold text-center text-white leading-tight">The Unofficial GraphQL for PokeAPI</h1>
        <div class="flex mt-6 justify-start md:justify-center xl:justify-start">
          <a
            class="rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 md:text-lg xl:text-base bg-purple-100 text-purple-700 shadow-md"
            href="https://graphql-pokeapi.graphcdn.app/"
            >Playground</a
          >

          <a
            target="_blank"
            rel="noopenner noreferrer"
            href="https://www.mazipan.space/support"
            class="ml-2 rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 md:text-lg xl:text-base bg-red-100 text-red-700 shadow-md"
            >Support</a
          >

          <a
            target="_blank"
            rel="noopenner noreferrer"
            href="https://github.com/mazipan/graphql-pokeapi"
            class="ml-2 rounded-lg px-4 md:px-5 xl:px-4 py-3 md:py-4 xl:py-3 md:text-lg xl:text-base bg-gray-100 text-gray-700 shadow-md">
              GitHub 
           </a>

        </div>
        <div class="flex mt-2 justify-start md:justify-center xl:justify-start">
          <img alt="GitHub Repo stars" src="https://img.shields.io/github/stars/mazipan/graphql-pokeapi?style=social" />
        </div>

      </div>

      <svg
        class="waves"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink"
        viewBox="0 24 150 28"
        preserveAspectRatio="none"
        shape-rendering="auto"
      >
        <defs>
          <path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z" />
        </defs>
        <g class="parallax">
          <use xlink:href="#gentle-wave" x="48" y="0" fill="rgba(255,255,255,0.7" />
          <use xlink:href="#gentle-wave" x="48" y="3" fill="rgba(255,255,255,0.5)" />
          <use xlink:href="#gentle-wave" x="48" y="5" fill="rgba(255,255,255,0.3)" />
          <use xlink:href="#gentle-wave" x="48" y="7" fill="#fff" />
        </g>
      </svg>

      <article class="w-full max-w-4xl mx-auto mt-8 mb-4 p-4 md:mt-32">
        <h3 class="text-2xl md:text-3xl font-bold mb-4 text-gray-700">Make Request</h3>

        <ul>
          <li class="card">
            <div class="card__header">
              Using Fetch API
            </div>
            <div class="card__body">
              <div class="card__content">
                <details>
                  <summary>Code</summary>
                  <pre>
                    <code class="language-javascript">
const gqlQuery = `query pokemons($limit: Int, $offset: Int) {
  pokemons(limit: $limit, offset: $offset) {
    count
    next
    previous
    status
    message
    results {
      url
      name
      image
    }
  }
}`;

const gqlVariables = {
  limit: 2,
  offset: 1,
};

fetch('https://graphql-pokeapi.graphcdn.app/', {
  credentials: 'omit',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({
    query: gqlQuery,
    variables: gqlVariables,
  }),
  method: 'POST',
})
  .then((res) => res.json())
  .then((res) => console.log('Response from server', res));</code>
                  </pre>
                </details>
              </div>
            </div>
          </li>
          <li class="card">
            <div class="card__header">
              Using Apollo Client
            </div>
            <div class="card__body">
              <div class="card__content">
                <details>
                  <summary>Code</summary>
                  <pre>
                    <code class="language-javascript">
import React from 'react';
import { gql, useQuery } from '@apollo/client';

const GET_POKEMONS = gql`
  query pokemons($limit: Int, $offset: Int) {
    pokemons(limit: $limit, offset: $offset) {
      count
      next
      previous
      status
      message
      results {
        url
        name
        image
      }
    }
  }
`;

const gqlVariables = {
  limit: 2,
  offset: 1,
};

export const Todos = () => {
  const { loading, error, data } = useQuery(GET_POKEMONS, {
    variables: gqlVariables,
  });

  if (loading) return 'Loading...';
  if (error) return `Error! ${error.message}`;

  console.log('Response from server', data);
  return 'Success!';
};</code>
                  </pre>
                </details>
              </div>
            </div>
          </li>
        </ul>
      </article>

      <article class="w-full max-w-4xl mx-auto mb-4 p-4">
        <h3 class="text-2xl md:text-3xl font-bold mb-4 text-gray-700">Available Queries</h3>

        <ul>
          <% if (data) { %> <% data.forEach(function(d){ %>
          <li class="card">
            <div class="card__header"><%= d.query %><% if (d.param) { %> (<%= d.param %>)<% } %>: <%= d.responseType %></div>
            <div class="card__body">
              <div class="card__title"><%= d.desc %></div>
              <div class="card__content">
                <details>
                  <summary>Sample Query</summary>
                  <pre><code class="language-graphql"><% if (d.code) { %><%= d.code.query %><% } %></code></pre>
                </details>

                <details>
                  <summary>Sample Variables</summary>
                  <pre><code class="language-javascript"><% if (d.code) { %><%= d.code.variable %><% } %></code></pre>
                </details>

                <details>
                  <summary>Sample Result</summary>
                  <pre><code class="language-javascript"><% if (d.code) { %><%= d.code.result %><% } %></code></pre>
                </details>
              </div>
            </div>
          </li>
          <% }); %> <% } %>
        </ul>
      </article>
    </main>

    <footer class="bg-red-500">
      <ul class="flex items-center justify-between max-w-4xl p-4 mx-auto text-sm text-white md:p-8">
        <li>
          Code by
          <a href="https://mazipan.space/" target="_blank" rel="noopenner noreferrer" class="font-bold">Irfan Maulana</a>
        </li>
        <li>
          <a href="https://github.com/mazipan/graphql-pokeapi" target="_blank" rel="noopenner noreferrer" class="font-bold">GitHub</a>
        </li>
      </ul>
    </footer>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.22.0/components/prism-core.min.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.22.0/plugins/autoloader/prism-autoloader.min.js" defer></script>
  </body>
</html>
